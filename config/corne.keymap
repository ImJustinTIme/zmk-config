#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            key-positions = <9 10>;
            bindings = <&kp BACKSPACE>;
        };

        tab {
            key-positions = <2 1>;
            bindings = <&kp TAB>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <8 9 10>;
        };

        quotes {
            bindings = <&kp SQT>;
            key-positions = <21 22>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <1 2 3>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        quick_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <2 3 4>;
        };

        quick_down {
            bindings = <&kp DOWN>;
            key-positions = <14 16 15>;
        };

        quick_right {
            bindings = <&kp RIGHT>;
            key-positions = <16 15 17>;
        };

        quick_left {
            bindings = <&kp LEFT>;
            key-positions = <14 15 13>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <1 2 5>;
        };
    };

    behaviors {
        spc_shft: spc_shft {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC_SHFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &kp Q            &kp W            &kp F                     &kp P         &kp G          &kp J        &kp L         &kp U               &kp Y             &kp SEMI              &none
&none  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_SHIFT S         &hml LCTRL T  &kp D          &kp H        &hmr RCTRL N  &hmr RIGHT_SHIFT E  &hmr RIGHT_ALT I  &hmr RIGHT_COMMAND O  &none
&none  &kp Z            &kp X            &kp C                     &kp V         &kp B          &kp K        &kp M         &kp COMMA           &kp DOT           &kp FSLH              &none
                                         &kp LC(LA(LS(LEFT_GUI)))  &mo 1         &lt 2 SPACE    &lt 2 SPACE  &mo 4         &mo 5
            >;
        };

        Numeric {
            bindings = <
&none  &trans  &kp N7  &kp N8  &kp N9  &kp BACKSPACE    &trans  &trans          &trans    &trans          &trans           &none
&none  &trans  &kp N4  &kp N5  &kp N6  &trans           &trans  &kp UNDERSCORE  &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none
&none  &trans  &kp N1  &kp N2  &kp N3  &kp PERIOD       &trans  &trans          &trans    &trans          &kp PIPE         &none
                       &kp N0  &trans  &trans           &trans  &trans          &trans
            >;
        };

        Navigation {
            bindings = <
&none  &trans  &trans    &kp UP_ARROW  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans    &kp H   &kp J   &kp K   &kp L   &trans  &none
&none  &trans  &trans    &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans  &none
                         &trans        &trans     &trans    &trans  &trans  &trans
            >;
        };

        System {
            bindings = <
&none  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRI_DEC      &kp C_BRIGHTNESS_INC  &trans      &trans  &kp C_SLEEP                           &none
&none  &trans          &trans        &trans        &trans        &trans          &trans             &trans                &trans      &trans  &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &none
&none  &bt BT_CLR_ALL  &trans        &trans        &trans        &bootloader     &kp C_VOLUME_DOWN  &kp C_VOL_UP          &kp C_MUTE  &none   &kp C_PLAY_PAUSE                      &none
                                     &trans        &trans        &trans          &trans             &trans                &trans
            >;
        };

        Shifted {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &trans           &trans       &trans    &trans      &trans         &trans     &kp MINUS      &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none
&none  &kp CAPSLOCK     &trans       &trans    &trans      &trans         &trans     &trans         &trans        &trans                &kp BACKSLASH          &none
                                     &trans    &trans      &trans         &trans     &trans         &trans
            >;
        };

        Function {
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &trans  &trans  &trans  &trans   &none
&none  &trans  &trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans   &none
                       &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Go_To_System_layer {
            if-layers = <1 4>;
            then-layer = <3>;
        };
    };
};
